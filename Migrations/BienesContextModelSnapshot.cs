// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_ventas_por_oferta.Core.Context;

#nullable disable

namespace api_ventas_por_oferta.Migrations
{
    [DbContext(typeof(BienesContext))]
    partial class BienesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Auto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Annio")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Inmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bannio")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inmuebles");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AutoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeOferta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InmuebleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AutoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Patio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patios");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AutoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeVisita")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InmuebleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Auto", b =>
                {
                    b.HasOne("api_ventas_por_oferta.Core.Entity.Patio", "Patio")
                        .WithMany("Autos")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Oferta", b =>
                {
                    b.HasOne("api_ventas_por_oferta.Core.Entity.Auto", "Auto")
                        .WithMany()
                        .HasForeignKey("AutoId");

                    b.HasOne("api_ventas_por_oferta.Core.Entity.Cliente", "Cliente")
                        .WithMany("Ofertas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_ventas_por_oferta.Core.Entity.Inmueble", "Inmueble")
                        .WithMany("Ofertas")
                        .HasForeignKey("InmuebleId");

                    b.Navigation("Auto");

                    b.Navigation("Cliente");

                    b.Navigation("Inmueble");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Visita", b =>
                {
                    b.HasOne("api_ventas_por_oferta.Core.Entity.Auto", "Auto")
                        .WithMany()
                        .HasForeignKey("AutoId");

                    b.HasOne("api_ventas_por_oferta.Core.Entity.Cliente", "Cliente")
                        .WithMany("Visitas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_ventas_por_oferta.Core.Entity.Inmueble", "Inmueble")
                        .WithMany()
                        .HasForeignKey("InmuebleId");

                    b.Navigation("Auto");

                    b.Navigation("Cliente");

                    b.Navigation("Inmueble");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Cliente", b =>
                {
                    b.Navigation("Ofertas");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Inmueble", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("api_ventas_por_oferta.Core.Entity.Patio", b =>
                {
                    b.Navigation("Autos");
                });
#pragma warning restore 612, 618
        }
    }
}
